function study3_allstage_ratio_ANOVA(v)
%%%%% %NETW: network, network, subject, stage, session, cycle, band
%%%%% BANDS = 1-delta 2-theta 3-alpha 4-sigma 5-beta 6-gamma
v.LRN_ANOVA = [1 3 4 7 9 10 11 12 13 16 17 18 21 24 27 28 29];
v.CTRL_ANOVA = [3 4 6 9 10 11 12 14 15 17 21 22 28];

v.group = v.LRN_ANOVA; sess = 2;
% v.group = v.CTRL_ANOVA; sess = 1;

v.subj = 1:29; v.group = sort(v.group, 'descend');
for i = 1:length(v.group); v.subj(v.subj(v.group(i))) = []; end
v.nsubj = length(v.subj); % number of independent subjects
study3_load(v);
cd(v.vardir);load('v.mat');

for cc = 1:v.nsubj; c(cc) = v.subj(cc); end
v.subj_label= c'; v.violin_subj_label = [c' ; c'];

%% Inter-stage ANOVA of ratio between inter and intra-network connectivity
% Find ratio of within to between network connectivity per participant
for se = sess
    for st = 1:3
        for b = 1:v.nbands
            for i = 1:v.nsubj
                for w = 1:v.nnetw
                    withinnetw = NETW(w,w,i,st,se,1,b);
                    internetw = setdiff(1:v.nnetw,w);
                    for n2 = 1:length(internetw)
                        btwnetw = mean(NETW(internetw,w,i,st,se,1,b));
                    end
                    ratio(i,b,st,se) = withinnetw/btwnetw;
                end
            end
        end
    end
end

anova_dir = [v.homedir filesep 'results/ANOVA/interstage/' v.sess{s} '_interstage_ratio' filesep ];
if ~exist(anova_dir); mkdir(anova_dir); end; cd(anova_dir)
for b = 1:v.nbands

    vect1 = squeeze(ratio());
    vect2 = squeeze(NETW(w,ww,:,2,s,c,b));
    vect3 = squeeze(NETW(w,ww,:,3,s,c,b));
    nsubj = length(~isnan(vect1));
    mat(:,1) = vect1;mat(:,2) = vect2;mat(:,3) = vect3;

    [tbl,rm] = simple_mixed_anova(mat);
    f = table2array(tbl(3,4));
    p = table2array(tbl(3,5));
    %
    ANOVA_p(w,ww,b) =  p;  %ranovatbl{'(Intercept):Sessions','pValue'};
    ANOVA_F(w,ww,b) =  f;  %ranovatbl{'(Intercept):Sessions','F'};
    clear ranovatbl; clear rm;

    clear w; clear ww;

    pval_fdr_temp = ANOVA_p(:,:,b);
    F_val_fdr_temp = ANOVA_F(:,:,b);

    pval_vect_temp = pval_fdr_temp(1,:);
    F_val_vect_temp = F_val_fdr_temp(1,:);
    for i = 2:6
        pval_vect_temp = [pval_vect_temp pval_fdr_temp(i,i:6)];
        F_val_vect_temp = [F_val_vect_temp F_val_fdr_temp(i,i:6)];
    end; clear i;

    if  v.FDR == 'all' % runs FDR correction on all comparisons
        pval_vect(:,:,b) = pval_vect_temp;
        F_anovanetw(:,:,b) = F_val_vect_temp;
    elseif  v.FDR == 'mot'
        pval_vect(:,:,b) = pval_fdr_temp(5,:); % runs FDR correction ONLY on motor line
        F_anovanetw(:,:,b) = F_val_fdr_temp(5,:);
    end
    clear ntw;

    [~, dummy2, ~, dummy4]=fdr_bh(pval_vect(:,:,b),v.fdr_thres,'pdep','no');
    crit_p(:,:,b) = dummy2;
    if  v.FDR == 'all' % runs FDR correction on all comparisons

        adj_p_temp = zeros(6,6);
        index = 1;
        for i = 1:6
            for j = i:6
                adj_p_temp(i,j) = dummy4(index);
                adj_p_temp(j,i) = dummy4(index);
                index = index + 1;
            end
        end; clear i;
        adj_p(:,:,b) = triu(adj_p_temp);
    end
    clear dummy2; clear dummy4;
    index = find(pval_vect(1,:,b) == crit_p);

    if isempty(index); crit_F = 1000; % place holder
    else; crit_F = F_anovanetw(index);
    end
    clear index;

    [ivect,jvect]=find(abs(ANOVA_F(:,:,b))>=abs(crit_F));
    [ivect_unc,jvect_unc]=find(ANOVA_p(:,:,b)<=0.05);
    clear crit_F;

    matrix = ANOVA_F(:,:,b); tri_matrix = triu(matrix);

    imagesc(tri_matrix); axis square;   daspect([1 1 1]);
    set(gcf,'Color','white');set(gca,'YDir','reverse');hold on;
    dim = set(gcf, 'Position',  [1000, 900, 500, 450]); %left bottom width height
    h = colorbar; set(get(h,'title'),'string','f-val', 'fontsize', 12); %ylabel(h, 'f-val');
    ANOVA_max=max(max(ANOVA_F(:,:,b)));
    if gt(ANOVA_max, 6) ==1 && lt(ANOVA_max, 15) ==1;mm = ANOVA_max; elseif gt(ANOVA_max, 15) ==1 ; mm = 15; else; mm= 6;end;caxis([0 mm]);
    colormap(flipud(pink(10)));
    if  v.fig_labels == 1
        if s == 2
            title({  ['Post-Learning Sleep Connectity'] [v.bandname{b}  ' Stage Effect' ' , n= ' num2str(nsubj) ]}); % generate corresponding rfx figure %
        else
            title({  ['Control Sleep Connectity'] [v.bandname{b}  ' Stage Effect' ' , n= ' num2str(nsubj) ]}); % generate corresponding rfx figure %
        end
    else
        if s == 2
            title({  ['Post-Learning Sleep Connectity'] [v.bandname{b}  ' Stage Effect']}); % generate corresponding rfx figure %' , n= ' num2str(nsubj)
        else
            title({  ['Control Sleep Connectity'] [v.bandname{b}  ' Stage Effect']}); % generate corresponding rfx figure %' , n= ' num2str(nsubj)
        end
    end
    for a2=1:v.nnetws-1; line([a2+0.5 a2+0.5],[a2+1.5 0.5],'color','k','LineWidth',0.8);line([a2-0.5 v.nnetws+0.5],[a2+0.5 a2+0.5],'color','k','LineWidth',0.8); end
    for b2=1:v.nnetws; line([b2-0.5 b2-0.5],[0.5 v.nnetws+0.5],'color','k','LineWidth',0.001); line([0.5 v.nnetws+0.5],[b2-0.5 b2-0.5],'color','k','LineWidth',0.001);end
    clear a2; clear b2;

    set(gca,'YTick',[1:v.nnetws],'YTickLabel', v.netwname,'Fontsize',16); set(gca,'XTick',[1:v.nnetws],'XTickLabel', v.netwname,'Fontsize',16);

    scatter(jvect_unc,ivect_unc, 80, 'w', 'o' ,'ok','LineWidth',2.5); clear ivect_unc; clear jvect_unc;
    scatter(jvect,ivect,80,'w','ok','filled' ,'LineWidth',2.5); clear ivect; clear jvect;

    saveas(gcf, [anova_dir v.bandname{b} '_interstage_ANOVA.png'])
    clear a2; clear i; clear mm; clear f

    %% Violin plots for each significant btw session comparison
    if v.violin == 1
        ANOVA_violin = [anova_dir 'violin'];
        if ~exist(ANOVA_violin); mkdir(ANOVA_violin); end; cd(ANOVA_violin);
        for w=1:v.nnetws
            for ww=1:v.nnetws
                if ANOVA_p(w,ww,b) <0.05 == 1
                    violin_band = [ANOVA_violin filesep v.bandname{b}];
                    if ~exist(violin_band); mkdir(violin_band); end
                    x = [squeeze(NETW(w,ww,:,1,s,c,b)); squeeze(NETW(w,ww,:,2,s,c,b)); squeeze(NETW(w,ww,:,3,s,c,b))];
                    y = [repmat({'NREM2'}, v.nsubj,1) ; repmat({'NREM3'}, v.nsubj,1); repmat({'REM'}, v.nsubj,1)];
                    grouporder={'NREM2', 'NREM3', 'REM'};
                    figure; v1 = violinplot(x, y,'GroupOrder',grouporder, 'ShowMean', true);
                    a = get(gca,'XTickLabel');
                    set(gca,'XTickLabel',a,'fontsize',16)
                    set(gcf, 'Position',  [10, 10, 350, 500]);
                    if v.fig_title == 1
                        T = [v.sess{s} ' ' v.bandname{b} ' ' v.netwname{w} '-' v.netwname{ww} ];
                        title({T}, 'FontSize', 16);
                        ylabel('connectivity (z-score)', 'FontSize', 16);
                    end
                    if v.pval_labels == 1
                        f = num2str(round(ANOVA_F(w,ww,b),3));
                        text(0.1, 0.98,['F = ' f] ,'Units','normalized');
                        p = round(ANOVA_p(w,ww,b),4);
                        if p < 0.001
                            text(0.1, 0.95,['p(UC) < 0.001 '],'Units','normalized');
                        else
                            text(0.1, 0.95,['p(UC) = ' num2str(p)],'Units','normalized');
                        end
                    end
                    saveas(gcf, [violin_band filesep  v.bandname{b} '_' v.netwname{w} '_' v.netwname{ww} '.png' ]);
                end
            end
        end
        close all;
    end
end
close all;

end